[plugin_to_term]
path = /home/source/wns/commonlibs/log_plugins/to_term/libto_term.so
param = 

[plugin_to_logs]
path = /home/source/wns/commonlibs/log_plugins/to_logs/libto_logs.so
param = 

[plugin_to_telnet]
path = /home/source/wns/commonlibs/log_plugins/to_telnet/libto_telnet.so
param = 

[plugin_to_files]
path = /home/source/wns/commonlibs/log_plugins/to_files/libto_files.so
# 插件全局参数配置, 会被插件的用户参数配置覆盖
# 注意: 插件配置的输出日志的文件名, 必须指定为绝对路径, 且日志文件所在的目录必须存在
# logfile: 输出日志的全局文件配置, 被指定日志类型的文件配置覆盖
# fatal, debug, ... : 指定日志类型的文件配置, 其中debug配置文件会被指定调试等级的文件配置覆盖
# debug_xx: 指定调试等级的文件配置 (注意:这个等级从0开始, 而日志等级从1开始, 有差别匹配)
# 100: 每个配置的日志输出文件的最大长度(以kb为单位), 日志文件超过这个最大长度就会从头开始写日志
# filter_file: 指定多个模糊匹配的串, 用':'隔开, 插件根据源文件名称进行模糊匹配, 只有匹配成功的源文件中输出的日志才会被保存
param = logfile=/tmp/adam.log,100,fatal=/tmp/fatal.log,100,warn=/tmp/fatal.log,100,safe=/tmp/safe.log,100,debug=/tmp/debug.log,100,debug_0=/tmp/debug_0.log,100,debug_1=/tmp/debug_1.log,100,debug_2=/tmp/debug_2.log,100,debug_3=/tmp/debug_3.log,100,debug_4=/tmp/debug_4.log,100,filter_file=test_libhs_log:test_list

[log_config]
count = 2
plugin0 = plugin_to_term
param0 =
plugin1 = plugin_to_files
#插件用户参数配置, 覆盖插件全局配置
param1 = logfile=/tmp/adam.log,100,filter_file=

[default]
config = log_config
# ET_DEBUG_LEVEL1 (0x1) ~ ET_DEBUG_LEVEL32 (0x1<<31)
# 其他 ET_DEBUG_APP (0x3FF) ET_DEBUG_ALL (0xFFFFFFFF)
# unsigned int32
debug_level = 0xFFFFFFFF

