/*
SQLyog Ultimate v11.31 (32 bit)
MySQL - 5.1.73 : Database - dnspro_core
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`dnspro_core` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `dnspro_core`;


/* Procedure structure for procedure `ta` */

/*!50003 DROP PROCEDURE IF EXISTS  `ta` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `ta`(
	IN `tab_name` VARCHAR(255), 
	IN `str_name` VARCHAR(255), 
	IN `str_main` VARCHAR(255), 
	IN `n_view` INT, 
	IN `n_ttl` INT, 
	IN `str_data` VARCHAR(255), 
	IN `n_state` INT, 
	IN `n_enable` INT, IN `n_rid` INT)
BEGIN
	DECLARE done INT DEFAULT 0;
	DECLARE n_zid INT default null;
	declare arr_tbls varchar(255);
	declare cut_tbl varchar(255);
	declare i int;  
	DECLARE cname_relation VARCHAR(255) DEFAULT NULL;
	DECLARE cursor_cname CURSOR FOR (SELECT DISTINCT cr.name FROM `cname_record` cr LEFT JOIN zone ze ON cr.zone=ze.id WHERE cr.cname=str_name AND ze.view=n_view AND cr.enable=1);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	
	SELECT `id` INTO n_zid FROM zone WHERE domain=str_main AND `view`=n_view LIMIT 1;
	if n_zid is null then
		insert into zone(client_id,domain,`view`,description) values(1,str_main,n_view,'');
		SELECT `id` INTO n_zid FROM zone WHERE domain=str_main AND `view`=n_view LIMIT 1;
	end if;
	set arr_tbls = 'a_record,aaaa_record,cname_record,mx_record,ns_record,txt_record';
	set i=1;  
	while_label: while i <= 6 do 			
		set cut_tbl=concat(substring_index(substring_index(arr_tbls, ',' ,i),',',-1));
		IF STRCMP(cut_tbl, tab_name)!=0 THEN
			SET @oname = NULL;
			SET @oview = NULL;
			SET @sqlcmd=CONCAT("SELECT ar.name,ze.view into @oname,@oview FROM ",cut_tbl,
				" ar LEFT JOIN zone ze ON ar.zone=ze.id WHERE ar.enable=1 AND ar.rid=",n_rid);
			PREPARE stmt FROM @sqlcmd;
			EXECUTE stmt;
			
			IF @oname IS NOT NULL AND @oview IS NOT NULL THEN
				SET @sqlcmd = CONCAT("delete from `", cut_tbl, "` WHERE rid=", n_rid);
				PREPARE stmt FROM @sqlcmd;
				EXECUTE stmt;
				
				SET @same_dn_cnt = 0;	
				IF @oname IS NOT NULL AND n_zid IS NOT NULL THEN					
					SET @sqlcmd = CONCAT("SELECT count(*) into @same_dn_cnt FROM ",cut_tbl,
						" WHERE `name`='",@oname,"' AND `zone`=",n_zid," AND `enable`=1");
					PREPARE stmt FROM @sqlcmd;
					EXECUTE stmt;
				END IF;
				IF @same_dn_cnt > 0 THEN
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 1);
				ELSE
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 2);
				END IF;
				-- select @oname, @oview, cut_tbl, @same_dn_cnt;			
			end if;
		END IF;
		set i = i + 1;  
	end while;
	
	-- update的时候才用
	-- SET @sqlcmd = CONCAT("UPDATE `", tab_name, "` SET `enable`=", n_enable, " WHERE rid=", n_rid);
	-- PREPARE stmt FROM @sqlcmd;
	-- EXECUTE stmt;
				
	SET @sqlcmd = 'error';
	IF STRCMP(tab_name, 'a_record')=0 OR STRCMP(tab_name, 'aaaa_record')=0 THEN
		-- CALL add_a_record('a_record', 't2.test.com','test.com',2,10,'3.3.3.3',0,1,153);
		-- CALL del_a_record('a_record', 153);
		-- CALL add_a_record('aaaa_record', 't2.test.com','test.com',2,10,'2404:6800:4005:806::1014',0,1,153);
		-- CALL del_a_record('aaaa_record', 153);
		SET @sqlcmd = CONCAT('INSERT INTO ',tab_name,' (zone,`name`,ttl,ipaddr,state,`enable`,`rid`) VALUES(',
				     n_zid,',\'',str_name,'\',',n_ttl,',\'',str_data,'\',',n_state,',',n_enable,',',n_rid,
				     ') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_name,'\',`ttl`=',n_ttl,
				     ',ipaddr=\'',str_data,'\',state=',n_state,',`enable`=',n_enable);
	ELSEIF STRCMP(tab_name, 'cname_record')=0 THEN
		-- CALL add_a_record('cname_record', 't2.test.com','test.com',2,10,'ttt3.bb.com',0,1,153);
		-- CALL del_a_record('cname_record', 153);
		SET @sqlcmd = CONCAT('INSERT INTO ',tab_name,' (zone,`name`,ttl,`cname`,state,`enable`,`rid`) VALUES(',
				     n_zid,',\'',str_name,'\',',n_ttl,',\'',str_data,'\',',n_state,',',n_enable,',',n_rid,
				     ') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_name,'\',`ttl`=',n_ttl,
				     ',`cname`=\'',str_data,'\',state=',n_state,',`enable`=',n_enable);
		
	ELSEIF STRCMP(tab_name, 'ns_record')=0 THEN
		-- CALL add_a_record('ns_record', 't2.test.com','test.com',2,10,'ttt3.bb.com',0,1,153);
		-- CALL del_a_record('ns_record', 153);
		SET @sqlcmd = CONCAT('INSERT INTO ',tab_name,' (zone,`name`,ttl,`server`,state,`enable`,`rid`) VALUES(',
				     n_zid,',\'',str_name,'\',',n_ttl,',\'',str_data,'\',',n_state,',',n_enable,',',n_rid,
				     ') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_name,'\',`ttl`=',n_ttl,
				     ',`server`=\'',str_data,'\',state=',n_state,',`enable`=',n_enable);
		
	ELSEIF STRCMP(tab_name, 'txt_record')=0 THEN
		-- CALL add_mx_record('txt_record', 't3.test.com','test.com',2,10,'asdgjasdglsgkj你好',0,1,153);
		-- CALL del_a_record('txt_record', 153);
		SET @sqlcmd = CONCAT('INSERT INTO ',tab_name,' (zone,`name`,ttl,`txt`,state,`enable`,`rid`) VALUES(',
				     n_zid,',\'',str_name,'\',',n_ttl,',\'',str_data,'\',',n_state,',',n_enable,',',n_rid,
				     ') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_name,'\',`ttl`=',n_ttl,
				     ',`txt`=\'',str_data,'\',state=',n_state,',`enable`=',n_enable);
		
	END IF ;
	
	PREPARE stmt FROM @sqlcmd; 
	EXECUTE stmt;  
	
	DEALLOCATE PREPARE stmt; 
	IF n_enable = 0 THEN
		CALL add_snd_req_new('dns', tbl_to_dnstype(tab_name), n_view, str_name, 0, 2);
	ELSE
		CALL add_snd_req_new('dns', tbl_to_dnstype(tab_name), n_view, str_name, 0, 1);
	END IF;
	
	IF  STRCMP(tab_name, 'a_record')=0 THEN
		SET done = 0;
		OPEN cursor_cname;
		REPEAT
			IF NOT done THEN
				FETCH cursor_cname INTO cname_relation;
				IF cname_relation IS NOT NULL THEN
					CALL add_snd_req_new('dns', tbl_to_dnstype('a_record'), n_view, cname_relation, 0, 1);				
				END IF;
				SET cname_relation = NULL;
			END IF;
		UNTIL done END REPEAT;
		CLOSE cursor_cname;
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `ta_mx` */

/*!50003 DROP PROCEDURE IF EXISTS  `ta_mx` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `ta_mx`(
	IN str_name VARCHAR(255),
	IN str_main VARCHAR(255),
	IN n_view INT,
	IN n_ttl INT,
	IN n_level INT,
	IN str_data VARCHAR(255),
	IN n_state INT,
	IN n_enable INT,
	IN n_rid INT)
BEGIN
	DECLARE n_zid INT default NULL;	
	DECLARE arr_tbls VARCHAR(255);
	DECLARE cut_tbl VARCHAR(255);
	declare i int;
	SELECT `id` INTO n_zid FROM zone WHERE domain=str_main AND `view`=n_view LIMIT 1;
	IF n_zid IS NULL THEN
		INSERT INTO zone(client_id,domain,`view`,description) VALUES(1,str_main,n_view,'');
		SELECT `id` INTO n_zid FROM zone WHERE domain=str_main AND `view`=n_view LIMIT 1;
	END IF;
	SET @oname = NULL;
	SET @oview = NULL;
	SET arr_tbls = 'a_record,aaaa_record,cname_record,mx_record,ns_record,txt_record';
	SET i=1;  
	while_label: WHILE i <= 6 DO 
		SET cut_tbl=CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(arr_tbls, ',' ,i),',',-1));
		IF STRCMP(cut_tbl, 'mx_record')!=0 THEN
			SET @oname = NULL;
			SET @oview = NULL;
			SET @sqlcmd=CONCAT("SELECT ar.name,ze.view into @oname,@oview FROM ",cut_tbl,
				" ar LEFT JOIN zone ze ON ar.zone=ze.id WHERE ar.enable=1 AND ar.rid=",n_rid);
			PREPARE stmt FROM @sqlcmd;
			EXECUTE stmt;
			
			IF @oname IS NOT NULL AND @oview IS NOT NULL THEN
				SET @sqlcmd = CONCAT("delete from `", cut_tbl, "` WHERE rid=", n_rid);
				PREPARE stmt FROM @sqlcmd;
				EXECUTE stmt;
				
				SET @same_dn_cnt = 0;	
				IF @oname IS NOT NULL AND n_zid IS NOT NULL THEN					
					SET @sqlcmd = CONCAT("SELECT count(*) into @same_dn_cnt FROM ",cut_tbl,
						" WHERE `name`='",@oname,"' AND `zone`=",n_zid," AND `enable`=1");
					PREPARE stmt FROM @sqlcmd;
					EXECUTE stmt;
				END IF;
				IF @same_dn_cnt > 0 THEN
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 1);
				ELSE
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 2);
				END IF;
				-- SELECT @oname, @oview, cut_tbl, @same_dn_cnt;
			END IF;
			
		END IF;
		SET i = i + 1;  
	END WHILE;
	
	-- update的时候才用到
	-- SET @sqlcmd = CONCAT("UPDATE `mx_record` SET `enable`=", n_enable, " WHERE rid=", n_rid);
	-- PREPARE stmt FROM @sqlcmd;
	-- EXECUTE stmt;
	
	SET @sqlcmd = CONCAT('INSERT INTO `mx_record`',' (zone,`name`,ttl,`level`,`server`,state,`enable`,`rid`) VALUES(',
		n_zid,',\'',str_name,'\',',n_ttl,',',n_level,',\'',str_data,'\',',n_state,',',n_enable,',',n_rid,
		') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_name,'\',`ttl`=',n_ttl,',`level`=',n_level,
		',`server`=\'',str_data,'\',state=',n_state,',`enable`=',n_enable);
	PREPARE stmt FROM @sqlcmd;  
	EXECUTE stmt;  
	
	DEALLOCATE PREPARE stmt; 
	
	IF n_enable = 0 THEN
		CALL add_snd_req_new('dns', tbl_to_dnstype('mx_record'), n_view, str_name, 0, 2);
	ELSE
		CALL add_snd_req_new('dns', tbl_to_dnstype('mx_record'), n_view, str_name, 0, 1);
	END IF;
	
    END */$$
DELIMITER ;




/* Procedure structure for procedure `ta_ptr` */

/*!50003 DROP PROCEDURE IF EXISTS  `ta_ptr` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `ta_ptr`(
	IN str_ip VARCHAR(255),
	IN str_domain VARCHAR(255),
	IN n_view INT,
	IN n_ttl INT,
	IN n_state INT,
	IN n_enable INT,
	IN n_rid INT)
BEGIN
	DECLARE n_zid INT default NULL;	
	DECLARE arr_tbls VARCHAR(255);
	DECLARE cut_tbl VARCHAR(255);
	declare i int;
	SELECT `id` INTO n_zid FROM zone WHERE domain=str_ip AND `view`=n_view LIMIT 1;
	IF n_zid IS NULL THEN
		INSERT INTO zone(client_id,domain,`view`,description) VALUES(1,str_ip,n_view,'');
		SELECT `id` INTO n_zid FROM zone WHERE domain=str_ip AND `view`=n_view LIMIT 1;
	END IF;
	SET @oname = NULL;
	SET @oview = NULL;
	SET arr_tbls = 'a_record,aaaa_record,cname_record,mx_record,ns_record,txt_record,ptr_record';
	SET i=1;  
	while_label: WHILE i <= 7 DO 
		SET cut_tbl=CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(arr_tbls, ',' ,i),',',-1));
		IF STRCMP(cut_tbl, 'ptr_record')!=0 THEN
			SET @oname = NULL;
			SET @oview = NULL;
			SET @sqlcmd=CONCAT("SELECT ar.name,ze.view into @oname,@oview FROM ",cut_tbl,
				" ar LEFT JOIN zone ze ON ar.zone=ze.id WHERE ar.enable=1 AND ar.rid=",n_rid);
			PREPARE stmt FROM @sqlcmd;
			EXECUTE stmt;
			
			IF @oname IS NOT NULL AND @oview IS NOT NULL THEN
				SET @sqlcmd = CONCAT("delete from `", cut_tbl, "` WHERE rid=", n_rid);
				PREPARE stmt FROM @sqlcmd;
				EXECUTE stmt;
				
				SET @same_dn_cnt = 0;	
				IF @oname IS NOT NULL AND n_zid IS NOT NULL THEN					
					SET @sqlcmd = CONCAT("SELECT count(*) into @same_dn_cnt FROM ",cut_tbl,
						" WHERE `name`='",@oname,"' AND `zone`=",n_zid," AND `enable`=1");
					PREPARE stmt FROM @sqlcmd;
					EXECUTE stmt;
				END IF;
				IF @same_dn_cnt > 0 THEN
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 1);
				ELSE
					CALL add_snd_req_new('dns', tbl_to_dnstype(cut_tbl), @oview, @oname, 0, 2);
				END IF;
				SELECT @oname, @oview, cut_tbl, @same_dn_cnt;
			END IF;
			
		END IF;
		SET i = i + 1;  
	END WHILE;
	
	-- update的时候才用到
	-- SET @sqlcmd = CONCAT("UPDATE `ptr_record` SET `enable`=", n_enable, " WHERE rid=", n_rid);
	-- PREPARE stmt FROM @sqlcmd;
	-- EXECUTE stmt;
	
	SET @sqlcmd = CONCAT('INSERT INTO `ptr_record`',' (zone,`name`,`domain`,ttl,state,`enable`,`rid`) VALUES(',
		n_zid,',\'',str_ip,'\',\'',str_domain,'\',',n_ttl,',',n_state,',',n_enable,',',n_rid,
		') ON DUPLICATE KEY UPDATE zone=',n_zid,',`name`=\'',str_ip,'\',`domain`=\'',str_domain,
		'\',`ttl`=',n_ttl,',state=',n_state,',`enable`=',n_enable);
	PREPARE stmt FROM @sqlcmd;  
	EXECUTE stmt;  
	
	DEALLOCATE PREPARE stmt; 
	
	IF n_enable = 0 THEN
		CALL add_snd_req_new('dns', tbl_to_dnstype('ptr_record'), n_view, str_ip, 0, 2);
	ELSE
		CALL add_snd_req_new('dns', tbl_to_dnstype('ptr_record'), n_view, str_ip, 0, 1);
	END IF;
	
    END */$$
DELIMITER ;




/* Procedure structure for procedure `ta_del_a_record` */

/*!50003 DROP PROCEDURE IF EXISTS  `ta_del_a_record` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `ta_del_a_record`(IN `tab_name` VARCHAR(255), IN `n_rid` INT)
BEGIN
	SET @oname = NULL;
	SET @oview = NULL;
	SET @ozid = NULL;
	SET @sqlcmd = CONCAT("SELECT ar.name,ze.view,ar.zone into @oname,@oview,@ozid FROM ",tab_name,
		" ar LEFT JOIN zone ze ON ar.zone=ze.id WHERE ar.enable=1 AND ar.rid=",n_rid," LIMIT 1");
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	
	SET @sqlcmd = CONCAT('delete from ',tab_name,' WHERE rid=',n_rid);
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	
	SET @same_dn_cnt = 0;	
	if @oname is not null and @ozid IS NOT NULL then
		SET @sqlcmd = CONCAT("SELECT count(*) into @same_dn_cnt FROM ",tab_name,
			" WHERE `name`='",@oname,"' AND `zone`=",@ozid," AND `enable`=1");
		PREPARE stmt FROM @sqlcmd;
		EXECUTE stmt;
	end if;
	
	DEALLOCATE PREPARE stmt;
	
	if @ozid is not null then
		update zone set update_time=NOW() where id=@ozid;
	end if;
    
	if @oview is not null and @oname is not null then
		if @same_dn_cnt > 0 then
			CALL add_snd_req_new('dns', tbl_to_dnstype(tab_name), @oview, @oname, 0, 1);
		else
			CALL add_snd_req_new('dns', tbl_to_dnstype(tab_name), @oview, @oname, 0, 2);
		end if;
	end if;
	-- SELECT @oname,@oview,@same_dn_cnt;
    END */$$
DELIMITER ;



/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
